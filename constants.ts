import type { Language } from './types';

export const translations: Record<Language, Record<string, string | ((...args: any[]) => string)>> = {
  th: {
    title: "ระบบแสดงข้อมูลห้องสอบ",
    examSettings: "ตั้งค่าข้อมูลการสอบ",
    courseCode: "รหัสวิชา",
    courseCodePlaceholder: "เช่น CS101",
    courseName: "ชื่อรายวิชา",
    courseNamePlaceholder: "เช่น คณิตศาสตร์พื้นฐาน",
    section: "หมู่เรียน",
    sectionPlaceholder: "เช่น หมู่ 1",
    examRoom: "ห้องสอบ",
    examRoomPlaceholder: "เช่น ห้อง 301",
    startTime: "เวลาเริ่มสอบ",
    durationHours: "ระยะเวลาสอบ (ชั่วโมง)",
    durationMinutes: "ระยะเวลาสอบ (นาที)",
    endTime: "เวลาสิ้นสุด",
    additionalInfo: "ข้อมูลเพิ่มเติมอื่นๆที่จะแจ้งให้นิสิตทราบในห้องสอบ",
    additionalInfoPlaceholder: "เช่น ห้ามใช้เครื่องคิดเลข, อนุญาตให้ใช้พจนานุกรม, ฯลฯ",
    alertSettings: "ตั้งค่าช่วงเวลาแจ้งเตือน",
    alert1: "แจ้งเตือนที่ 1 (สีเขียว) - นาทีสุดท้าย",
    alert2: "แจ้งเตือนที่ 2 (สีเหลือง) - นาทีสุดท้าย",
    alert3: "แจ้งเตือนที่ 3 (สีแดง) - นาทีสุดท้าย",
    clockDisplayType: "รูปแบบการแสดงเวลา",
    digitalClock: "นาฬิกาดิจิตอล (เวลาที่เหลือ)",
    analogClock: "นาฬิกาอนาล็อก (เวลาจริง)",
    showFullScreen: "แสดงแบบเต็มจอ",
    backToSettings: "← กลับไปแก้ไข",
    switchToAnalog: "เปลี่ยนเป็นอนาล็อก",
    switchToDigital: "เปลี่ยนเป็นดิจิตอล",
    timeRemaining: "เวลาสอบที่เหลืออยู่",
    examTime: "เวลาสอบ",
    course: "วิชา",
    unit: "น.",
    currentTime: "เวลาปัจจุบัน",
    timesUpTitle: "หมดเวลาทำข้อสอบแล้ว<br>วางปากกาและส่งข้อสอบได้",
    endExamTimer: "สิ้นสุดการตั้งเวลาสอบ",
    timeBeforeExam: "เวลาก่อนเริ่มสอบ",
    alertGreen: "นิสิตสามารถส่งข้อสอบ และ ออกจากห้องสอบได้",
    alertYellow: (minutes: number) => `เหลือเวลาอีก ${minutes} นาทีสุดท้าย!`,
    alertRed: (minutes: number) => `เหลือเวลาอีก ${minutes} นาทีสุดท้าย!`,
    validationFillAll: "กรุณากรอกข้อมูล รหัสวิชา, ชื่อวิชา, หมู่เรียน, ห้องสอบ และ เวลาเริ่มสอบ",
    validationZeroDuration: "กรุณาระบุระยะเวลาสอบ",
    validationStartTime: "กรุณาระบุเวลาเริ่มสอบ",
  },
  en: {
    title: "Exam Room Information System",
    examSettings: "Exam Settings",
    courseCode: "Course Code",
    courseCodePlaceholder: "e.g. CS101",
    courseName: "Course Name",
    courseNamePlaceholder: "e.g. Basic Mathematics",
    section: "Section",
    sectionPlaceholder: "e.g. Section 1",
    examRoom: "Exam Room",
    examRoomPlaceholder: "e.g. Room 301",
    startTime: "Start Time",
    durationHours: "Duration (Hours)",
    durationMinutes: "Duration (Minutes)",
    endTime: "End Time",
    additionalInfo: "Additional Information for Students",
    additionalInfoPlaceholder: "e.g. No calculators allowed, Dictionary permitted, etc.",
    alertSettings: "Alert Settings",
    alert1: "Alert 1 (Green) - Minutes Remaining",
    alert2: "Alert 2 (Yellow) - Minutes Remaining",
    alert3: "Alert 3 (Red) - Minutes Remaining",
    clockDisplayType: "Clock Display Type",
    digitalClock: "Digital Clock (Time Remaining)",
    analogClock: "Analog Clock (Current Time)",
    showFullScreen: "Show Full Screen",
    backToSettings: "← Back to Settings",
    switchToAnalog: "Switch to Analog",
    switchToDigital: "Switch to Digital",
    timeRemaining: "Time Remaining",
    examTime: "Exam Time",
    course: "Course",
    unit: "",
    currentTime: "Current Time",
    timesUpTitle: "Time's Up!<br>Please stop writing and submit your exam",
    endExamTimer: "End Exam Timer",
    timeBeforeExam: "Time Before Exam Starts",
    alertGreen: "Students may submit and leave the exam room",
    alertYellow: (minutes: number) => `${minutes} ${minutes === 1 ? 'minute' : 'minutes'} remaining!`,
    alertRed: (minutes: number) => `${minutes} ${minutes === 1 ? 'minute' : 'minutes'} remaining!`,
    validationFillAll: "Please fill in Course Code, Course Name, Section, Exam Room and Start Time",
    validationZeroDuration: "Please specify exam duration",
    validationStartTime: "Please specify a start time",
  }
};